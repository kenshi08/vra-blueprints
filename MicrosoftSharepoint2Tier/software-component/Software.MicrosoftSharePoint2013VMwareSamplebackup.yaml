'@type': "SoftwareComponentType"
createdDate: "2017-05-04T07:08:48.659Z"
lastUpdated: "2017-05-04T07:08:48.868Z"
id: "Software.MicrosoftSharePoint2013VMwareSamplebackup"
name: "Microsoft SharePoint 2013"
description: "Microsoft SharePoint Server 2013. You can use it as a secure place to\
  \ store, organize, share, and access information from almost any device. All you\
  \ need is a web browser, such as Internet Explorer, Chrome, or Firefox."
publishStatus: "PUBLISHED"
publishStatusName: "Published"
schema:
  fields:
  - id: "FILE_SHARE_USERNAME"
    label: "FILE_SHARE_USERNAME"
    description: "Username for accessing remote fileshare"
    dataType:
      type: "primitive"
      typeId: "STRING"
    state:
      dependencies: []
      facets:
      - type: "mandatory"
        value:
          type: "constant"
          value:
            type: "boolean"
            value: false
      - type: "defaultValue"
        value:
          type: "constant"
          value:
            type: "string"
            value: "NULLPHASE\\cloudadmin"
    isMultiValued: false
  - id: "FILE_SHARE_SHAREPOINT_2013_FOLDER"
    label: "FILE_SHARE_SHAREPOINT_2013_FOLDER"
    description: "Folder on the remote fileshare containing the Sharepoint 2013 installer\
      \ binaries.e.g. SharePointServer_x64_en-us"
    dataType:
      type: "primitive"
      typeId: "STRING"
    state:
      dependencies: []
      facets:
      - type: "mandatory"
        value:
          type: "constant"
          value:
            type: "boolean"
            value: false
      - type: "defaultValue"
        value:
          type: "constant"
          value:
            type: "string"
            value: "files\\sharepoint2013\\"
    isMultiValued: false
  - id: "FILE_SHARE"
    label: "FILE_SHARE"
    description: "Remote fileshare containing installer binaries, e.g. installers-share"
    dataType:
      type: "primitive"
      typeId: "STRING"
    state:
      dependencies: []
      facets:
      - type: "mandatory"
        value:
          type: "constant"
          value:
            type: "boolean"
            value: true
      - type: "defaultValue"
        value:
          type: "constant"
          value:
            type: "string"
            value: "labs"
    isMultiValued: false
  - id: "FILE_SHARE_PASSWORD"
    label: "FILE_SHARE_PASSWORD"
    description: "Password for remote fileshare"
    dataType:
      type: "primitive"
      typeId: "SECURE_STRING"
    state:
      dependencies: []
      facets:
      - type: "defaultValue"
        value:
          type: "constant"
          value:
            type: "secureString"
            value: ""
      - type: "mandatory"
        value:
          type: "constant"
          value:
            type: "boolean"
            value: false
      - type: "encrypted"
        value:
          type: "constant"
          value:
            type: "boolean"
            value: true
    isMultiValued: false
  - id: "FILE_SERVER"
    label: "FILE_SERVER"
    description: "IP address or Hostname of the file server e.g. smbserver.example.com"
    dataType:
      type: "primitive"
      typeId: "STRING"
    state:
      dependencies: []
      facets:
      - type: "mandatory"
        value:
          type: "constant"
          value:
            type: "boolean"
            value: true
      - type: "defaultValue"
        value:
          type: "constant"
          value:
            type: "string"
            value: "depot-w7-01a.nullphase.local"
    isMultiValued: false
  - id: "host"
    label: ""
    description: ""
    dataType:
      type: "ref"
      componentTypeId: "com.vmware.csp.iaas.blueprint.service"
      classId: "Infrastructure.Machine.Schema"
      label: "Machine"
    state:
      dependencies: []
      facets:
      - type: "mandatory"
        value:
          type: "constant"
          value:
            type: "boolean"
            value: true
      - type: "internal"
        value:
          type: "constantClause"
          value:
            type: "boolean"
            value: true
      - type: "visible"
        value:
          type: "constantClause"
          value:
            type: "boolean"
            value: false
    isMultiValued: false
  - id: "PRODUCT_ID_KEY"
    label: "PRODUCT_ID_KEY"
    description: "SharePoint 2013 Product Key"
    dataType:
      type: "primitive"
      typeId: "STRING"
    state:
      dependencies: []
      facets:
      - type: "mandatory"
        value:
          type: "constant"
          value:
            type: "boolean"
            value: true
      - type: "defaultValue"
        value:
          type: "constant"
          value:
            type: "string"
            value: "NQTMW-K63MQ-39G6H-B2CH9-FRDWJ"
    isMultiValued: false
  - id: "MAPPED_PS_DRIVE"
    label: "MAPPED_PS_DRIVE"
    description: "PowerShell drive to which the fileshare containing the installer\
      \ binaries is mapped, e.g. Z"
    dataType:
      type: "primitive"
      typeId: "STRING"
    state:
      dependencies: []
      facets:
      - type: "mandatory"
        value:
          type: "constant"
          value:
            type: "boolean"
            value: false
      - type: "defaultValue"
        value:
          type: "constant"
          value:
            type: "string"
            value: "Z"
    isMultiValued: false
  - id: "SHAREPOINT_2013_INSTALLER_BINARIES_FOLDER"
    label: "SHAREPOINT_2013_INSTALLER_BINARIES_FOLDER"
    description: "Local folder containing Sharepoint 2013 installer binaries e.g.\
      \ C:\\Temp\\Installers"
    dataType:
      type: "primitive"
      typeId: "STRING"
    state:
      dependencies: []
      facets:
      - type: "mandatory"
        value:
          type: "constant"
          value:
            type: "boolean"
            value: true
      - type: "defaultValue"
        value:
          type: "constant"
          value:
            type: "string"
            value: "C:\\Temp\\Installers"
    isMultiValued: false
containerFieldId: "host"
lifecycleTasks:
- createdDate: "2017-05-04T07:08:48.661Z"
  lastUpdated: "2017-05-04T07:08:48.661Z"
  script:
    scriptContent: "# Copyright 2011-2015 VMware, Inc. All rights reserved. \n#\n\
      # ==============================================================================================\n\
      #\n# Microsoft SharePoint 2013 Blueprint v1.0\n#\n# This script is used to install\
      \ Microsoft SharePoint 2013 on a host. \n#\n# The script expects the expanded/self-extracted\
      \ installation binaries to be present on a CIFS/SMB file share on a file server.\n\
      # The location of the installation binaries must be passed via properties to\
      \ the script.\n#\n# INPUT PROPERTIES:\n# Property Name Type Default Value\n\
      #\n# The IP address or Hostname of the File Server where the File Share containing\
      \ the installer binaries resides.\n# FILE_SERVER String  \n#\n# The File share\
      \ or CIFS/SMB mount point on the File Server containing the installer binaries.\n\
      # FILE_SHARE String\n#\n# The password of the user identity for File share access.\n\
      # FILE_SHARE_PASSWORD String\n#\n# The folder on the File share containing the\
      \ installer binaries.\n# FILE_SHARE_SHAREPOINT_2013_FOLDER String \n#\n# The\
      \ user identity used to access the File share.\n# FILE_SHARE_USERNAME String\n\
      #\n# The PowerShell drive to which the File share containing the installer binaries\
      \ is mapped.\n# MAPPED_PS_DRIVE String \"Z\"\n#\n# The SharePoint 2013 Product\
      \ Key\n# PRODUCT_ID_KEY String \n#\n# The local file system location to which\
      \ the installer binaries are copied from the File share. \n# SHAREPOINT_2013_INSTALLER_BINARIES_FOLDER\
      \ String \"C:\\Temp\\Installers\"\n#\n# ==============================================================================================\n\
      \n$DebugPreference = \"Continue\"\n\n$SharePointPrequisitesFolder =  $SHAREPOINT_2013_INSTALLER_BINARIES_FOLDER\
      \ + \"\\SharePoint2013Prerequisites\"\n\n# Create destination folder for SharePoint\
      \ 2013 requisites, if it doesn't exist\nIf ( -Not (Test-Path $SharePointPrequisitesFolder)\
      \ )\n{\n   New-Item -ItemType directory -Path $SharePointPrequisitesFolder\n\
      }\n\nSet-Location $SharePointPrequisitesFolder\n\n# A dictionary containing\
      \ the URLs for eachSharePoint Prerequisite, along with the filename it should\
      \ be saved as\n$DownloadUrls = @{\n    \"http://download.microsoft.com/download/9/1/3/9138773A-505D-43E2-AC08-9A77E1E0490B/1033/x64/sqlncli.msi\"\
      \ = \"sqlncli.msi\"; # Microsoft SQL Server 2008 R2 SP1 Native Client\n    \"\
      http://download.microsoft.com/download/E/0/0/E0060D8F-2354-4871-9596-DC78538799CC/Synchronization.msi\"\
      \ = \"Synchronization.msi\"; # Microsoft Sync Framework Runtime v1.0 SP1 (x64)\n\
      \    \"http://download.microsoft.com/download/A/6/7/A678AB47-496B-4907-B3D4-0A2D280A13C0/WindowsServerAppFabricSetup_x64.exe\"\
      \ = \"WindowsServerAppFabricSetup_x64.exe\"; # Windows Server App Fabric\n \
      \   \"http://download.microsoft.com/download/7/B/5/7B51D8D1-20FD-4BF0-87C7-4714F5A1C313/AppFabric1.1-RTM-KB2671763-x64-ENU.exe\"\
      \ = \"AppFabric1.1-RTM-KB2671763-x64-ENU.exe\"; # Cumulative Update Package\
      \ 1 for Microsoft AppFabric 1.1 for Windows Server (KB2671763)\n    \"http://download.microsoft.com/download/D/7/2/D72FD747-69B6-40B7-875B-C2B40A6B2BDD/Windows6.1-KB974405-x64.msu\"\
      \ = \"Windows6.1-KB974405-x64.msu\"; # Windows Identity Foundation (KB974405)\n\
      \    \"http://download.microsoft.com/download/0/1/D/01D06854-CA0C-46F1-ADBA-EBF86010DCC6/rtm/MicrosoftIdentityExtensions-64.msi\"\
      \ = \"MicrosoftIdentityExtensions-64.msi\"; # Microsoft Identity Extensions\n\
      \    \"http://download.microsoft.com/download/9/1/D/91DA8796-BE1D-46AF-8489-663AB7811517/setup_msipc_x64.msi\"\
      \ = \"setup_msipc_x64.msi\"; # Microsoft Information Protection and Control\
      \ Client\n    \"http://download.microsoft.com/download/8/F/9/8F93DBBD-896B-4760-AC81-646F61363A6D/WcfDataServices.exe\"\
      \ = \"WcfDataServices.exe\"; # Microsoft WCF Data Services 5.0\n    \"http://download.microsoft.com/download/1/C/A/1CAA41C7-88B9-42D6-9E11-3C655656DAB1/WcfDataServices.exe\"\
      \ = \"WcfDataServices56.exe\" # Microsoft WCF Data Services 5.6\n}\n\nForeach\
      \ ($Item in $DownloadUrls.GetEnumerator())\n{\n    $DownloadUrl = $Item.Key\n\
      \    $FileName = $Item.Value\n    Write-Output \"DownloadUrl: \" $DownloadUrl\n\
      \    Write-Output \"FileName: \" $FileName\n    Try\n    {\n        # Check\
      \ if destination file already exists\n        If ( -Not (Test-Path \"$SharePointPrequisitesFolder\\\
      $FileName\") )\n        {\n            Invoke-WebRequest $DownloadUrl -OutFile\
      \ $SharePointPrequisitesFolder\\$FileName \n        }\n\n    }\n    Catch\n\
      \    {\n            Write-Error \" - An error occurred downloading `'$FileName`'\"\
      \n            Write-Error $_.Exception\n            break\n    }\n}\n\n# Unblock\
      \ the downloaded files.\nGet-ChildItem -Path $SharePointPrequisitesFolder -Recurse\
      \ | Unblock-File -confirm:$false\n\nSet-Location $SharePointPrequisitesFolder\n\
      \n# Install the Prerequisites\nWrite-Output \"Installing sqlncli.msi...\"\n\
      Try\n{\n    Start-Process -FilePath sqlncli.msi -ArgumentList '/passive IACCEPTSQLNCLILICENSETERMS=YES'\
      \ -PassThru -Wait\n}\nCatch\n{\n   Write-Error \"Failed to install sqlncli.msi\"\
      \n   Write-Error $_.Exception\n   Exit -1 \n}\nWrite-Output \"Installing Windows6.1-KB974405-x64.msu...\"\
      \nTry\n{\n    Start-Process Windows6.1-KB974405-x64.msu -ArgumentList '/quiet'\
      \ -PassThru -Wait\n}\nCatch\n{\n   Write-Error \"Failed to install Windows6.1-KB974405-x64.msu\"\
      \n   Write-Error $_.Exception\n   Exit -1 \n}\nWrite-Output \"Installing MicrosoftIdentityExtensions-64.msi...\"\
      \nTry\n{\n    Start-Process MicrosoftIdentityExtensions-64.msi -ArgumentList\
      \ '/passive'  -PassThru -Wait\n}\nCatch\n{\n   Write-Error \"Failed to install\
      \ MicrosoftIdentityExtensions-64.msi\"\n   Write-Error $_.Exception\n   Exit\
      \ -1 \n}\nWrite-Output \"Installing Synchronization.msi...\"\nTry\n{\n    Start-Process\
      \ Synchronization.msi -ArgumentList '/passive'  -PassThru -Wait\n}\nCatch\n\
      {\n   Write-Error \"Failed to install Synchronization.msi\"\n   Write-Error\
      \ $_.Exception\n   Exit -1 \n}\nWrite-Output \"Installing WindowsServerAppFabricSetup_x64.exe...\"\
      \nTry\n{\n    Start-Process WindowsServerAppFabricSetup_x64.exe -ArgumentList\
      \ '/i CacheClient,CachingService,CacheAdmin /gac'  -PassThru -Wait\n}\nCatch\n\
      {\n   Write-Error \"Failed to install WindowsServerAppFabricSetup_x64.exe\"\n\
      \   Write-Error $_.Exception\n   Exit -1 \n}\nWrite-Output \"Installing AppFabric1.1-RTM-KB2671763-x64-ENU.exe...\"\
      \nTry\n{\n    Start-Process AppFabric1.1-RTM-KB2671763-x64-ENU.exe -ArgumentList\
      \ '/passive'  -PassThru -Wait\n}\nCatch\n{\n   Write-Error \"Failed to install\
      \ AppFabric1.1-RTM-KB2671763-x64-ENU.exe\"\n   Write-Error $_.Exception\n  \
      \ Exit -1 \n}\nWrite-Output \"Installing setup_msipc_x64.msi...\"\nTry\n{\n\
      \    Start-Process setup_msipc_x64.msi -ArgumentList '/passive'  -PassThru -Wait\n\
      }\nCatch\n{\n   Write-Error \"Failed to install setup_msipc_x64.msi \"\n   Write-Error\
      \ $_.Exception\n   Exit -1 \n}\n\nWrite-Output \"Installing WcfDataServices.exe...\"\
      \nTry\n{\n    Start-Process WcfDataServices.exe -ArgumentList '/passive' -PassThru\
      \ -Wait\n}\nCatch\n{\n   Write-Error \"Failed to install WcfDataServices.exe\"\
      \n   Write-Error $_.Exception\n   Exit -1 \n}\nWrite-Output \"Installing WcfDataServices56.exe...\"\
      \nTry\n{\n    Start-Process WcfDataServices56.exe -ArgumentList '/passive' \
      \ -PassThru -Wait\n}\nCatch\n{\n   Write-Error \"Failed to install WcfDataServices56.exe\"\
      \n   Write-Error $_.Exception\n   Exit -1 \n}\n# End of Script"
    isRebootAfter: true
    scriptTypeId: "powershell"
  taskDescriptorRef:
    id: "CONFIGURE"
    label: "Configure"
- createdDate: "2017-05-04T07:08:48.662Z"
  lastUpdated: "2017-05-04T07:08:48.662Z"
  script:
    scriptContent: "# Copyright 2011-2015 VMware, Inc. All rights reserved. \n#\n\
      # ==============================================================================================\n\
      #\n# Microsoft SharePoint 2013 Blueprint v1.0\n#\n# This script is used to install\
      \ Microsoft SharePoint 2013 on a host. \n#\n# The script expects the expanded/self-extracted\
      \ installation binaries to be present on a CIFS/SMB file share on a file server.\n\
      # The location of the installation binaries must be passed via properties to\
      \ the script.\n#\n# INPUT PROPERTIES:\n# Property Name Type Default Value\n\
      #\n# The IP address or Hostname of the File Server where the File Share containing\
      \ the installer binaries resides.\n# FILE_SERVER String  \n#\n# The File share\
      \ or CIFS/SMB mount point on the File Server containing the installer binaries.\n\
      # FILE_SHARE String\n#\n# The password of the user identity for File share access.\n\
      # FILE_SHARE_PASSWORD String\n#\n# The folder on the File share containing the\
      \ installer binaries.\n# FILE_SHARE_SHAREPOINT_2013_FOLDER String \n#\n# The\
      \ user identity used to access the File share.\n# FILE_SHARE_USERNAME String\n\
      #\n# The PowerShell drive to which the File share containing the installer binaries\
      \ is mapped.\n# MAPPED_PS_DRIVE String \"Z\"\n#\n# The SharePoint 2013 Product\
      \ Key\n# PRODUCT_ID_KEY String \n#\n# The local file system location to which\
      \ the installer binaries are copied from the File share. \n# SHAREPOINT_2013_INSTALLER_BINARIES_FOLDER\
      \ String \"C:\\Temp\\Installers\"\n#\n# ==============================================================================================\n\
      \n$DebugPreference = \"Continue\"\n\n# Checking network connectivity to file\
      \ server\nTest-Connection -ComputerName $FILE_SERVER -Count 1\n\n# Mount the\
      \ Fileshare on the Fileserver containing the Installer binaries\nIf ($FILE_SHARE_USERNAME)\
      \ \n{    \n    $SecurePassword = ConvertTo-SecureString \"$FILE_SHARE_PASSWORD\"\
      \ -AsPlainText -Force\n    $FileShareCredential = New-Object System.Management.Automation.PSCredential\
      \ (\"$FILE_SHARE_USERNAME\", $SecurePassword)\n    New-PSDrive –Name $MAPPED_PS_DRIVE\
      \ –PSProvider FileSystem –Root “\\\\$FILE_SERVER\\$FILE_SHARE” –Persist -Credential\
      \ $FileShareCredential\n} \nElse \n{\n    New-PSDrive –Name $MAPPED_PS_DRIVE\
      \ –PSProvider FileSystem –Root “\\\\$FILE_SERVER\\$FILE_SHARE” –Persist\n}\n\
      \n# Create destination folder for SharePoint 2013 installer binaries, if it\
      \ doesn't exist\nIf ( -Not (Test-Path $SHAREPOINT_2013_INSTALLER_BINARIES_FOLDER)\
      \ )\n{\n   New-Item -ItemType Directory -Path $SHAREPOINT_2013_INSTALLER_BINARIES_FOLDER\n\
      }\n\n# Copy installer binaries locally from Fileshare\nTry \n{\n   Write-Output\
      \ \"Copying SharePoint installation binaries from Fileshare\"\n   Copy-Item\
      \ ${MAPPED_PS_DRIVE}:$FILE_SHARE_SHAREPOINT_2013_FOLDER  $SHAREPOINT_2013_INSTALLER_BINARIES_FOLDER\
      \ -Recurse -ErrorAction Stop\n}\nCatch \n{\n   Write-Error \"Failed to copy\
      \ SharePoint 2013 installer binaries\"\n   Write-Error $_.Exception\n   Exit\
      \ -1 \n}\n\n # Add Windows Server component dependencies\nWrite-Output \"Adding\
      \ Windows Features ...\"\nImport-Module ServerManager\nAdd-WindowsFeature NET-WCF-HTTP-Activation45,NET-WCF-TCP-Activation45,NET-WCF-Pipe-Activation45\n\
      Add-WindowsFeature Net-Framework-Features,Web-Server,Web-WebServer,Web-Common-Http,Web-Static-Content,Web-Default-Doc,Web-Dir-Browsing,Web-Http-Errors,Web-App-Dev,Web-Asp-Net,Web-Net-Ext,Web-ISAPI-Ext,Web-ISAPI-Filter,Web-Health,Web-Http-Logging,Web-Log-Libraries,Web-Request-Monitor,Web-Http-Tracing,Web-Security,Web-Basic-Auth,Web-Windows-Auth,Web-Filtering,Web-Digest-Auth,Web-Performance,Web-Stat-Compression,Web-Dyn-Compression,Web-Mgmt-Tools,Web-Mgmt-Console,Web-Mgmt-Compat,Web-Metabase,Application-Server,AS-Web-Support,AS-TCP-Port-Sharing,AS-WAS-Support,\
      \ AS-HTTP-Activation,AS-TCP-Activation,AS-Named-Pipes,AS-Net-Framework,WAS,WAS-Process-Model,WAS-NET-Environment,WAS-Config-APIs,Web-Lgcy-Scripting,Windows-Identity-Foundation,Server-Media-Foundation,Xps-Viewer\n\
      \n# End of Script"
    isRebootAfter: true
    scriptTypeId: "powershell"
  taskDescriptorRef:
    id: "INSTALL"
    label: "Install"
- createdDate: "2017-05-04T07:08:48.663Z"
  lastUpdated: "2017-05-04T07:08:48.663Z"
  script:
    scriptContent: "# Copyright 2011-2015 VMware, Inc. All rights reserved. \n#\n\
      # ==============================================================================================\n\
      #\n# Microsoft SharePoint 2013 Blueprint v1.0\n#\n# This script is used to install\
      \ Microsoft SharePoint 2013 on a host. \n#\n# The script expects the expanded/self-extracted\
      \ installation binaries to be present on a CIFS/SMB file share on a file server.\n\
      # The location of the installation binaries must be passed via properties to\
      \ the script.\n#\n# INPUT PROPERTIES:\n# Property Name Type Default Value\n\
      #\n# The IP address or Hostname of the File Server where the File Share containing\
      \ the installer binaries resides.\n# FILE_SERVER String  \n#\n# The File share\
      \ or CIFS/SMB mount point on the File Server containing the installer binaries.\n\
      # FILE_SHARE String\n#\n# The password of the user identity for File share access.\n\
      # FILE_SHARE_PASSWORD String\n#\n# The folder on the File share containing the\
      \ installer binaries.\n# FILE_SHARE_SHAREPOINT_2013_FOLDER String \n#\n# The\
      \ user identity used to access the File share.\n# FILE_SHARE_USERNAME String\n\
      #\n# The PowerShell drive to which the File share containing the installer binaries\
      \ is mapped.\n# MAPPED_PS_DRIVE String \"Z\"\n#\n# The SharePoint 2013 Product\
      \ Key\n# PRODUCT_ID_KEY String \n#\n# The local file system location to which\
      \ the installer binaries are copied from the File share. \n# SHAREPOINT_2013_INSTALLER_BINARIES_FOLDER\
      \ String \"C:\\Temp\\Installers\"\n#\n# ==============================================================================================\n\
      \n$DebugPreference = \"Continue\"\n\n# Create Config.XML for the Setup, first\
      \ in a temporary location\n$TEMP_SHAREPOINT_CONFIG_FILE_PATH = $env:TEMP + \"\
      \\Config.xml\"  \n\nWrite-Output \"Creating temporary config.xml for SharePoint\
      \ installation at \" $TEMP_SHAREPOINT_CONFIG_FILE_PATH\n$XmlWriter = New-Object\
      \ System.XMl.XmlTextWriter($TEMP_SHAREPOINT_CONFIG_FILE_PATH, $Null)  \n\n#\
      \ Set The Formatting  \n$xmlWriter.Formatting = \"Indented\"  \n$xmlWriter.Indentation\
      \ = \"4\"  \n \n# Write Root Element \n$xmlWriter.WriteStartElement(\"Configuration\"\
      ) \n$xmlWriter.WriteStartElement(\"Package\")   \n$XmlWriter.WriteAttributeString(\"\
      Id\",\"sts\")   \n$xmlWriter.WriteStartElement(\"Setting\")   \n$XmlWriter.WriteAttributeString(\"\
      Id\",\"LAUNCHEDFROMSETUPSTS\")  \n$xmlWriter.WriteAttributeString(\"Value\"\
      ,\"Yes\")\n$XmlWriter.WriteEndElement()\n$XmlWriter.WriteEndElement() \n$xmlWriter.WriteStartElement(\"\
      Package\") \n$XmlWriter.WriteAttributeString(\"Id\",\"spswfe\")  \n$xmlWriter.WriteStartElement(\"\
      Setting\") \n$XmlWriter.WriteAttributeString(\"Id\",\"SETUPCALLED\")  \n$xmlWriter.WriteAttributeString(\"\
      Value\",\"1\")  \n$XmlWriter.WriteEndElement()\n$XmlWriter.WriteEndElement()\
      \ \n$xmlWriter.WriteStartElement(\"Logging\") \n$XmlWriter.WriteAttributeString(\"\
      Type\",\"verbose\")  \n$xmlWriter.WriteAttributeString(\"Path\",\"%temp%\")\
      \ \n$xmlWriter.WriteAttributeString(\"Template\",\"SharePoint Server Setup(*).log\"\
      )\n$XmlWriter.WriteEndElement() \n$xmlWriter.WriteStartElement(\"PIDKEY\") \n\
      $XmlWriter.WriteAttributeString(\"Value\",$PRODUCT_ID_KEY)\n$XmlWriter.WriteEndElement()\
      \  \n$xmlWriter.WriteStartElement(\"Display\") \n$XmlWriter.WriteAttributeString(\"\
      Level\",\"none\")  \n$XmlWriter.WriteAttributeString(\"CompletionNotice\",\"\
      no\")\n$XmlWriter.WriteEndElement()\n$xmlWriter.WriteStartElement(\"Setting\"\
      ) \n$XmlWriter.WriteAttributeString(\"Id\",\"SERVERROLE\")  \n$xmlWriter.WriteAttributeString(\"\
      Value\",\"SINGLESERVER\")\n$XmlWriter.WriteEndElement() \n$xmlWriter.WriteStartElement(\"\
      Setting\") \n$XmlWriter.WriteAttributeString(\"Id\",\"USINGUIINSTALLMODE\")\
      \  \n$xmlWriter.WriteAttributeString(\"Value\",\"0\")\n$XmlWriter.WriteEndElement()\
      \ \n$xmlWriter.WriteStartElement(\"Setting\") \n$XmlWriter.WriteAttributeString(\"\
      Id\",\"SETUP_REBOOT\")  \n$xmlWriter.WriteAttributeString(\"Value\",\"Never\"\
      )\n$XmlWriter.WriteEndElement() \n$xmlWriter.WriteStartElement(\"Setting\")\
      \ \n$XmlWriter.WriteAttributeString(\"Id\",\"SETUPTYPE\")  \n$xmlWriter.WriteAttributeString(\"\
      Value\",\"CLEAN_INSTALL\") \n$XmlWriter.WriteEndElement()\n$XmlWriter.WriteEndElement()\
      \             \n$xmlWriter.Flush()  \n$xmlWriter.Close() \n\n# $LocalFolder\
      \ = $FILE_SHARE_SHAREPOINT_2013_FOLDER.Split('\\\\')[-1]\n$LocalFolder = \"\
      sharepoint2013\"\n\n# Build path to final SharePoint 2013 installer configuration\
      \ file\n$ListConfig = \"/config \" + $SHAREPOINT_2013_INSTALLER_BINARIES_FOLDER\
      \ + \"\\\" + $LocalFolder + \"\\Config.xml\" \n \n# Change directory to the\
      \ installer folder\nSet-Location C:\\Temp\\Installers\\sharepoint2013\n\n# Copy\
      \ temporary installer configuration file to final destination  \nWrite-Output\
      \ \"Copying \" $TEMP_SHAREPOINT_CONFIG_FILE_PATH \" to \" $SHAREPOINT_2013_INSTALLER_BINARIES_FOLDER\\\
      $LocalFolder\nCopy-Item $TEMP_SHAREPOINT_CONFIG_FILE_PATH -Destination $SHAREPOINT_2013_INSTALLER_BINARIES_FOLDER\\\
      $LocalFolder -Force  -ErrorAction silentlyContinue\n    \n# Unblock the SharePoint\
      \ 2013 installer binaries prior to install.\nGet-ChildItem -Path  $SHAREPOINT_2013_INSTALLER_BINARIES_FOLDER\\\
      $LocalFolder -Recurse | Unblock-File -confirm:$false\n\n# Install Microsoft\
      \ SharePoint 2013\nTry \n{\n    Start-Process setup.exe -ArgumentList $ListConfig\
      \ -PassThru -Wait\n}\nCatch\n{\n   Write-Error \"Failed to install SharePoint\
      \ 2013\"\n   Write-Error $_.Exception\n   Exit -1 \n}\n\n# End of Script"
    isRebootAfter: true
    scriptTypeId: "powershell"
  taskDescriptorRef:
    id: "START"
    label: "Start"
